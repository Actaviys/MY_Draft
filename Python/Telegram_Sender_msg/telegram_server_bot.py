import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command

# üîπ –í–≤–µ–¥–∏ —Å–≤—ñ–π Telegram API Token
TOKEN = "*******"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ —á–∞—Ç—É
async def clear_chat(message: Message):
    chat_id = message.chat.id  # –û—Ç—Ä–∏–º—É—î–º–æ ID —á–∞—Ç—É
    message_id = message.message_id  # –û—Ç—Ä–∏–º—É—î–º–æ ID –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    
    for msg_id in range(message_id, message_id - 50, -1):  # –í–∏–¥–∞–ª—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 50 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        try:
            await bot.delete_message(chat_id, msg_id)
        except Exception:
            pass  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏
    
    await message.answer("‚úÖ –ß–∞—Ç –æ—á–∏—â–µ–Ω–æ!")  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è



# üì• –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø –æ—Ç—Ä–∏–º—É—é –∫–æ–º–∞–Ω–¥–∏ –∑ —á–∞—Ç—É —Ç–∞ –∫–æ–Ω—Å–æ–ª—ñ.")

@dp.message(Command("clear"))
async def clear_command(message: Message):
    await clear_chat(message)


from aiogram.types import FSInputFile
doc_send = FSInputFile("text_doc.docx")  # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
# text_doc.docx
# üì• –û–±—Ä–æ–±–∫–∞ –±—É–¥—å-—è–∫–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–µ—Ö–æ-–≤—ñ–¥–ø–æ–≤—ñ–¥—å)
@dp.message()
async def echo_handler(message: Message):
    match message.text.lower():
        case "–ø—Ä–∏–≤—ñ—Ç":
            await message.answer_document(doc_send)
    # await message.answer(f"–¢–∏ –Ω–∞–ø–∏—Å–∞–≤: {message.text}")





# üì§ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –∫–æ–Ω—Å–æ–ª—ñ
async def send_console_message():
    chat_id = 12345654321

    loop = asyncio.get_event_loop()
    while True:
        text = await loop.run_in_executor(None, input, "–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ")
        text_cmd = str(text).lower()
        
        if text_cmd in ["exit", "quit"]:
            print("‚ùå –í–∏—Ö—ñ–¥ –∑ –∫–æ–Ω—Å–æ–ª—ñ...")
            break
        
        
        try:
            await bot.send_message(chat_id, text)
            print(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {text}")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")







# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ç–∞ –∫–æ–Ω—Å–æ–ª—ñ –æ–¥–Ω–æ—á–∞—Å–Ω–æ
async def main():
    console_task = asyncio.create_task(send_console_message())  # –ó–∞–ø—É—Å–∫ –≤–≤–æ–¥—É –∑ –∫–æ–Ω—Å–æ–ª—ñ
    await dp.start_polling(bot)  # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

if __name__ == "__main__":
    asyncio.run(main())